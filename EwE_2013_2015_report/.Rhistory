filter(Fixed_LoD %in% c(0, 25, 50, 75, 99)) %>%
select(F_mortality_interpolated) %>%
unlist() %>%
unname(),
F_vector_2 = Df_LoD_fixed_cod %>%
filter(Fixed_LoD %in% c(0, 25, 50, 75, 99)) %>%
select(F_mortality_interpolated) %>%
unlist() %>%
unname(),
obs_F_vector = F_Harp_seal_mortality,
obs_F_vector_2 = F_Cod_mortality,
digit_import_value = 8,
digit_import_value_2 = 8,
LoD_vector_name= c("obs", "0", "25", "50", "75", "99"),
change_name_for_LoD = TRUE,
print = TRUE)
# Chunk 61: save_rds_SEALxCOD
saveRDS(Df_merged_seal_vs_cod_biomass_final, file = here("Rds_export_adapted_data", "Df_merged_seal_vs_cod_biomass_final_EwE_2013.rds"))
# Chunk 62: summary_combined_import_generate_SEALxCOD
table_combi_function(data = Df_merged_seal_vs_cod_biomass_final,
species_col = "Cod",
species_row = "Harp Seal")
# Chunk 63: heatmap_biomass_lod_sealxcod_cod
heatmap_multispecific_biomass_LoD_function(data = Df_merged_seal_vs_cod_biomass_final,
species_number = c(13, 14),
species_one_fixe = "seal",
species_two_fixe = "cod",
species_one = "seal",
species_two = "cod")
# Chunk 64: heatmap_biomass_lod_sealxcod_seal
heatmap_multispecific_biomass_LoD_function(data = Df_merged_seal_vs_cod_biomass_final,
species_number = 6,
species_one_fixe = "seal",
species_two_fixe = "cod",
species_one = "cod",
species_two = "seal")
# Chunk 65: summary_multispecific_seal_cod_20
calculate_impact_summary_multispecific(
F_data = Df_merged_seal_vs_cod_biomass_final,
species_unselect = c(13, 14, 6),
species_1 = "seal",
species_2 = "cod",
total_number_group = EwE_number_group-3,
species_short = "harp_seal_vs_cod")
# Chunk 66: summary_multispecific_seal_cod_20_dttable
DT_tables_harp_seal_vs_cod$T20
# Chunk 67: summary_multispecific_seal_cod_40_dttable
DT_tables_harp_seal_vs_cod$T40
# Chunk 68: heatmap_multispecific_group_impacted_seal_cod_20
heatmap_multispecific_group_impacted(data= Df_impacted_harp_seal_vs_cod_table_20,
species_one_fixe = "seal",
species_two_fixe = "cod",
species_one = "seal",
species_two = "cod",
percent = "20%")
# Chunk 69: heatmap_multispecific_group_impacted_seal_cod_40
heatmap_multispecific_group_impacted(data= Df_impacted_harp_seal_vs_cod_table_40,
species_one_fixe = "seal",
species_two_fixe = "cod",
species_one = "seal",
species_two = "cod",
percent = "40%")
# Chunk 70: Large_table_group_impacted_sealvcod
datatable(data = Df_impacted_harp_seal_vs_cod_large_table, filter="top",
rownames = FALSE, options = list(pageLength = 10, scrollX=T),
caption = "For Harp seal verus cod simulations: Summary large table of groups impacted change for values in the range: Equal to 0: 0; Greater than 0 and less than or equal to 20: +; Greater than 20 and less than or equal to 40: + +; Greater than 40: + + +; Greater than or equal to -20 and less than 0: -; Less than -20 and greater than or equal to -40: - -; Less than -40: - - -.")
# Chunk 71: final_summary_heatmap_sealxcod
summary_heatmap_funtion_multi(Df_impacted_harp_seal_vs_cod_large_table, "seal", "cod")
combined_simulation_generate_function(
simulation_names = c(paste0("Fseal_", Df_LoD_fixed_harp_seal %>%
filter(Fixed_LoD %in% c(0, 25, 50, 75, 99)) %>%
select(F_mortality_interpolated) %>%
unlist()),
paste0("Fcapelin_", Df_LoD_fixed_capelin %>%
filter(Fixed_LoD %in% c(0, 25, 50, 75, 99)) %>%
select(F_mortality_interpolated) %>%
unlist())),
Weight = 1,
Group_no = c(rep(6, 5),rep(32, 5)),
Type = 4,
time_step_start = 1,
nb_time_steps = 100,
fill_value_min = c(rep(F_Harp_seal_mortality, 5),rep(F_Capelin_mortality, 5)),
fill_value_max = c(Df_LoD_fixed_harp_seal %>%
filter(Fixed_LoD %in% c(0, 25, 50, 75, 99)) %>%
select(F_mortality_interpolated) %>%
unlist(),
Df_LoD_fixed_capelin %>%
filter(Fixed_LoD %in% c(0, 25, 50, 75, 99)) %>%
select(F_mortality_interpolated) %>%
unlist()),
output_file = here(Harp_seal_versus_capelin_input, "Final_simulation", "Harp_seal_versus_capelin_input_simulation.csv"),
species_1 = "seal",
species_1_number = "6",
F_species_1 = F_Harp_seal_mortality,
species_2 = "capelin",
species_2_number = "32",
F_species_2 = F_Capelin_mortality,
order_colonnes = c(1,2,12,3,4,5,6,7,13,8,9,10,11)
)
# Chunk 1: setup
knitr::opts_chunk$set(
echo = FALSE,
include = FALSE,
fig.width = 12,
fig.height = 8,
fig.path = "R_figures_export/",
message = FALSE,
warning = FALSE,
dev = c("png", "pdf")
)
# options(device = "quartz")
# Chunk 2: package
install_and_load_packages <- function() {
# List of packages to be installed and loaded
packages <- c("tidyverse", "gridExtra", "knitr", "writexl", "openxlsx", "here", "scales", "DT")
# Function to install and load a package
install_and_load <- function(package_name) {
if (!requireNamespace(package_name, quietly = TRUE)) {
message(paste("Package", package_name, "is not installed. Installing..."))
install.packages(package_name, dependencies = TRUE)
}
message(paste("Loading package", package_name, "..."))
suppressMessages(library(package_name, character.only = TRUE))
}
# Loop through the list of packages
for (pkg_name in packages) {
install_and_load(pkg_name)
}
}
# Call the function to install and load packages
install_and_load_packages()
# Chunk 3: source
sapply(list.files(here("R_script"), pattern="*.R", full.names=TRUE, ignore.case=TRUE),source,.GlobalEnv)
# Chunk 4: generate_F_exploratory_simulation_seal
simulation_generate_function(
simulation_names = paste0("Fseal_", seq(0,0.22, by = 0.02)), # first exploration in ecopath show a 100% depletion around this value
Weight = 1,   # Default value
Group_no = 6, # Groupe number of Harp seal in ecopath database
Type = 4,     # Fishing mortality change
time_step_start = 1, # start at year 1
nb_time_steps = 100, # run during 100 years
fill_value_min = F_Harp_seal_mortality,
fill_value_max = seq(0,0.22, by = 0.02),
output_file = here(Harp_seal_input, "First_simulation", "Harp_seal_input_First_simulation.csv"))
# Chunk 5: harp_seal_first_simulation_quick_description_seal
datatable(data = data.frame("F (fishing mortality) value simulation" = paste0("Fseal_", seq(0, 0.22, by = 0.02))), filter="top",
rownames = FALSE, options = list(pageLength = 5, scrollX=T))
# Chunk 6: generate_F_exploratory_simulation_cod
simulation_generate_function(
simulation_names = paste0("Fcod_", seq(0,0.4, by = 0.02)), # first exploration in ecopath show a 100% depletion around this value
Weight = 1,   # Default value
Group_no = 13, # Groupe number of cod in ecopath database
Type = 4,     # Fishing mortality change
time_step_start = 1, # start at year 1
nb_time_steps = 100, # run during 100 years
fill_value_min = F_Cod_mortality,
fill_value_max = seq(0,0.4, by = 0.02),
output_file = here(Cod_input, "First_simulation", "Cod_input_First_simulation.csv"))
# Chunk 7: harp_seal_first_simulation_quick_description_cod
datatable(data = data.frame("F (fishing mortality) value simulation" = paste0("Fcod_", seq(0, 0.4, by = 0.02))), filter="top",
rownames = FALSE, options = list(pageLength = 5, scrollX=T))
# Chunk 8: generate_F_exploratory_simulation_capelin
simulation_generate_function(
simulation_names = paste0("Fcapelin_", seq(0,0.75, by = 0.05)), # first exploration in ecopath show a 100% depletion around this value
Weight = 1,   # Default value
Group_no = 32, # Groupe number of capelin in ecopath database
Type = 4,     # Fishing mortality change
time_step_start = 1, # start at year 1
nb_time_steps = 100, # run during 100 years
fill_value_min = F_Capelin_mortality,
fill_value_max = seq(0,0.75, by = 0.05),
output_file = here(Capelin_input, "First_simulation", "Capelin_input_First_simulation.csv"))
# Chunk 9: harp_seal_first_simulation_quick_description_capelin
datatable(data = data.frame("F (fishing mortality) value simulation" = paste0("Fcapelin_", seq(0, 0.75, by = 0.05))), filter="top",
rownames = FALSE, options = list(pageLength = 5, scrollX=T))
# Chunk 10: import_seal_first_simulation
import_transformation_output_function(input_select = "biomass",
species_short = "Fseal",
species_long = "Harp_seal",
wich_simulation = "first",
F_vector = seq(0, 0.22, by = 0.02),
print = FALSE)
# Chunk 11: First_LoD_harp_seal_figures
LoD_check_plot_approx(data = Df_merged_Fseal_biomass_first,
observed_biomass = Biomass_Harp_Seal,
Fspecies = "Fseal",
species = "Harp seal",
species_chrc = "harp_seal",
Group_number_specific = 6)
# Chunk 12: First_LoD_harp_seal_table
datatable(data = Df_LoD_fixed_harp_seal, filter="top",
rownames = FALSE, options = list(pageLength = 5, scrollX=T))
# Chunk 13: import_cod_first_simulation
import_transformation_output_function(input_select = "biomass",
species_short = "Fcod",
species_long = "Cod",
wich_simulation = "first",
F_vector = seq(0, 0.4, by = 0.02),
print = FALSE)
# Chunk 14: create_group_50_for_merged_cod_life_stage
Df_merged_Fcod_biomass_first  <- Df_merged_Fcod_biomass_first %>%
mutate(across(starts_with("biomass"), as.numeric)) %>%
filter(Group_number %in% c(13, 14)) %>%
mutate(
across(starts_with("biomass"), ~ sum(.)),
Group_number = 50,
Group_name = "Cod"
) %>%
slice(1) %>%
rbind.data.frame(Df_merged_Fcod_biomass_first) %>%
arrange(Group_number)
# Chunk 15: First_LoD_cod_figures
LoD_check_plot_approx(data = Df_merged_Fcod_biomass_first,
observed_biomass = Biomass_cod,
Fspecies = "Fcod",
species = "Cod",
species_chrc = "cod",
Group_number_specific = 50)
# Chunk 16: First_LoD_cod_table
datatable(data = Df_LoD_fixed_cod, filter="top",
rownames = FALSE, options = list(pageLength = 5, scrollX=T))
# Chunk 17: import_capelin_first_simulation
import_transformation_output_function(input_select = "biomass",
species_short = "Fcapelin",
species_long = "Capelin",
wich_simulation = "first",
F_vector = seq(0, 0.75, by = 0.05),
print = FALSE)
# Chunk 18: First_LoD_capelin_figures
LoD_check_plot_approx(data = Df_merged_Fcapelin_biomass_first,
observed_biomass = Biomass_Capelin,
Fspecies = "Fcapelin",
species = "Capelin",
species_chrc = "capelin",
Group_number_specific = 32)
# Chunk 19: First_LoD_capelin_table
datatable(data = Df_LoD_fixed_capelin, filter="top",
rownames = FALSE, options = list(pageLength = 5, scrollX=T))
# Chunk 20: generate_F_final_simulation_Fseal
simulation_generate_function(
simulation_names = paste0("Fseal_", Df_LoD_fixed_harp_seal %>%
filter(Fixed_LoD %in% c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 99)) %>%
select(F_mortality_interpolated) %>%
unlist()),
Weight = 1,
Group_no = 6,
Type = 4,
time_step_start = 1,
nb_time_steps = 100,
fill_value_min = F_Harp_seal_mortality,
fill_value_max = Df_LoD_fixed_harp_seal %>%
filter(Fixed_LoD %in% c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 99)) %>%
select(F_mortality_interpolated) %>%
unlist(),
output_file = here(Harp_seal_input, "Final_simulation", "Harp_seal_input_Final_simulation.csv"))
# Chunk 21: import_final_simulation_Fseal
import_transformation_output_function(input_select = "biomass",
species_short = "Fseal",
species_long = "Harp_seal",
wich_simulation = "final",
F_vector = Df_LoD_fixed_harp_seal %>%
filter(Fixed_LoD %in% c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 99)) %>%
select(F_mortality_interpolated) %>%
unlist(),
digit_import_value = 8,
print = FALSE)
# Chunk 22: import_final_simulation_catch_Fseal
import_transformation_output_function(input_select = "catch",
species_short = "Fseal",
species_long = "Harp_seal",
wich_simulation = "final",
F_vector = Df_LoD_fixed_harp_seal %>%
filter(Fixed_LoD %in% c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 99)) %>%
select(F_mortality_interpolated) %>%
unlist(),
digit_import_value = 8,
print = FALSE)
# Chunk 23: plot_new_LoD_check_Fseal
LoD_check_plot(data = Df_merged_Fseal_biomass_final,
observed_biomass = Biomass_Harp_Seal,
Fspecies = "Fseal",
digit_import_value = 8,
species = "Harp Seal",
Group_number_specific = 6)
# Chunk 24: generate_F_final_simulation_Fcod
simulation_generate_function(
simulation_names = paste0("Fcod_", Df_LoD_fixed_cod %>%
filter(Fixed_LoD %in% c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 99)) %>%
select(F_mortality_interpolated) %>%
unlist()),
Weight = 1,
Group_no = 13,
Type = 4,
time_step_start = 1,
nb_time_steps = 100,
fill_value_min = F_Cod_mortality,
fill_value_max = Df_LoD_fixed_cod %>% filter(Fixed_LoD %in% c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 99)) %>%
select(F_mortality_interpolated) %>%
unlist(),
output_file = here(Cod_input, "Final_simulation", "Cod_input_Final_simulation.csv"))
# Chunk 25: import_final_simulation_Fcod
import_transformation_output_function(input_select = "biomass",
species_short = "Fcod",
species_long = "Cod",
wich_simulation = "final",
F_vector = Df_LoD_fixed_cod %>%
filter(Fixed_LoD %in% c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 99)) %>%
select(F_mortality_interpolated) %>%
unlist(),
digit_import_value = 8,
print = FALSE)
# Chunk 26: import_final_simulation_catch_Fcod
import_transformation_output_function(input_select = "catch",
species_short = "Fcod",
species_long = "Cod",
wich_simulation = "final",
F_vector = Df_LoD_fixed_cod %>%
filter(Fixed_LoD %in% c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 99)) %>%
select(F_mortality_interpolated) %>%
unlist(),
digit_import_value = 8,
print = FALSE)
# Chunk 27: create_group_50_for_merged_cod_life_stage_final
Df_merged_Fcod_biomass_final  <- Df_merged_Fcod_biomass_final %>%
mutate(across(starts_with("biomass"), as.numeric)) %>%
filter(Group_number %in% c(13, 14)) %>%
mutate(
across(starts_with("biomass"), ~ sum(.)),
Group_number = 50,
Group_name = "Cod"
) %>%
slice(1) %>%
rbind.data.frame(Df_merged_Fcod_biomass_final) %>%
arrange(Group_number)
# Chunk 28: plot_new_LoD_check_Fcod
LoD_check_plot(data = Df_merged_Fcod_biomass_final,
observed_biomass = Biomass_cod,
Fspecies = "Fcod",
digit_import_value = 8,
species = "Cod",
Group_number_specific = 50)
# Chunk 29: generate_F_final_simulation_Fcapelin
simulation_generate_function(
simulation_names = paste0("Fcapelin_", Df_LoD_fixed_capelin %>%
filter(Fixed_LoD %in% c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 99)) %>%
select(F_mortality_interpolated) %>%
unlist()),
Weight = 1,
Group_no = 32,
Type = 4,
time_step_start = 1,
nb_time_steps = 100,
fill_value_min = F_Capelin_mortality,
fill_value_max = Df_LoD_fixed_capelin %>% filter(Fixed_LoD %in% c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 99)) %>%
select(F_mortality_interpolated) %>%
unlist(),
output_file = here(Capelin_input, "Final_simulation", "Capelin_input_Final_simulation.csv"))
# Chunk 30: import_final_simulation_Fcapelin
import_transformation_output_function(input_select = "biomass",
species_short = "Fcapelin",
species_long = "Capelin",
wich_simulation = "final",
F_vector = Df_LoD_fixed_capelin %>%
filter(Fixed_LoD %in% c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 99)) %>%
select(F_mortality_interpolated) %>%
unlist(),
digit_import_value = 7,
print = FALSE)
# Chunk 31: import_final_simulation_catch_Fcapelin
import_transformation_output_function(input_select = "catch",
species_short = "Fcapelin",
species_long = "Capelin",
wich_simulation = "final",
F_vector = Df_LoD_fixed_capelin %>%
filter(Fixed_LoD %in% c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 99)) %>%
select(F_mortality_interpolated) %>%
unlist(),
digit_import_value = 7,
print = FALSE)
# Chunk 32: plot_new_LoD_check_Fcapelin
LoD_check_plot(data = Df_merged_Fcapelin_biomass_final,
observed_biomass = Biomass_Capelin,
Fspecies = "Fcapelin",
digit_import_value = 7,
species = "Capelin",
Group_number_specific = 32)
# Chunk 33: groups_impacted_calculation_harp_seal
calculate_impact_summary(LoD_rename = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 99),
F_data = Df_merged_Fseal_biomass_final,
species_unselect = 6,
species = "Harp seal",
total_number_group = EwE_number_group-1, #-harp seal
species_short = "harp_seal")
# Chunk 34: groups_impacted_calculation_harp_seal_t20
DT_tables_harp_seal$T20
# Chunk 35: groups_impacted_calculation_harp_seal_t40
DT_tables_harp_seal$T40
# Chunk 36: groups_impacted_calculation_cod
calculate_impact_summary(LoD_rename = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 99),
F_data = Df_merged_Fcod_biomass_final,
species_unselect = c(13, 14, 50),
species = "Cod",
total_number_group = EwE_number_group-3, #- cod, cod>30 and cod<30
species_short = "cod")
# Chunk 37: groups_impacted_calculation_cod_t20
DT_tables_cod$T20
# Chunk 38: groups_impacted_calculation_cod_t40
DT_tables_cod$T40
# Chunk 39: groups_impacted_calculation_capelin
calculate_impact_summary(LoD_rename = c(0, 10, 20, 30, 40, 50, 60, 70, 80, 90, 99),
F_data = Df_merged_Fcapelin_biomass_final,
species_unselect = 32,
species = "Capelin",
total_number_group = EwE_number_group-1, #- capelin
species_short = "capelin")
# Chunk 40: groups_impacted_calculation_capelin_t20
DT_tables_capelin$T20
# Chunk 41: groups_impacted_calculation_capelin_t40
DT_tables_capelin$T40
# Chunk 42: Large_table_group_impacted_seal
datatable(data = Df_impacted_harp_seal_large_table, filter="top",
rownames = FALSE, options = list(pageLength = 10, scrollX=T),
caption = "For Harp Seal: Summary large table of groups impacted change for values in the range: Equal to 0: 0; Greater than 0 and less than or equal to 20: +; Greater than 20 and less than or equal to 40: + +; Greater than 40: + + +; Greater than or equal to -20 and less than 0: -; Less than -20 and greater than or equal to -40: - -; Less than -40: - - -.")
# Chunk 43: Large_table_group_impacted_cod
datatable(data = Df_impacted_cod_large_table, filter="top",
rownames = FALSE, options = list(pageLength = 10, scrollX=T),
caption = "For Cod: Summary large table of groups impacted change for values in the range: Equal to 0: 0; Greater than 0 and less than or equal to 20: +; Greater than 20 and less than or equal to 40: + +; Greater than 40: + + +; Greater than or equal to -20 and less than 0: -; Less than -20 and greater than or equal to -40: - -; Less than -40: - - -.")
# Chunk 44: Large_table_group_impacted_capelin
datatable(data = Df_impacted_capelin_large_table, filter="top",
rownames = FALSE, options = list(pageLength = 10, scrollX=T),
caption = "For Capelin: Summary large table of groups impacted change for values in the range: Equal to 0: 0; Greater than 0 and less than or equal to 20: +; Greater than 20 and less than or equal to 40: + +; Greater than 40: + + +; Greater than or equal to -20 and less than 0: -; Less than -20 and greater than or equal to -40: - -; Less than -40: - - -.")
# Chunk 45: final_summary_heatmap
summary_heatmap_funtion(data_sp_seal = Df_impacted_harp_seal_large_table,
sp_seal = "Seal Harp",
nb_row_spseal_1 = 5,
nb_row_spseal_2 = 6,
data_sp_cod = Df_impacted_cod_large_table,
sp_cod_1 = "Cod> 35 cm",
sp_cod_2 = "Cod<= 35 cm",
nb_row_spcod_1 = 12,
nb_row_spcod_2 = 13,
data_sp_capelin = Df_impacted_capelin_large_table,
sp_capelin = "Capelin",
nb_row_spcapelin_1 = 31,
nb_row_spcapelin_2 = 32)
# Chunk 46: key_figure_seal
key_fig_function(catch_data = Df_merged_Fseal_catch_final,
Group_number_specific= 6,
data_20 = Df_impacted_harp_seal_table_20,
data_40 = Df_impacted_harp_seal_table_40,
obs_lod_data = observed_LoD_Fseal,
x_axis_species = "Harp seal",
name_species_rds = "seal")
# Chunk 47: key_figure_fseal_weeb
key_fig_function_LoD_web(
data_20 = Df_impacted_harp_seal_table_20,
data_40 = Df_impacted_harp_seal_table_40,
obs_LoD_data = observed_LoD_Fseal,
x_axis_species = "Harp Seal",
name_species_rds = "seal")
# Chunk 48: key_figure_cod
key_fig_function(catch_data = Df_merged_Fcod_catch_final,
Group_number_specific= 13,
data_20 = Df_impacted_cod_table_20,
data_40 = Df_impacted_cod_table_40,
obs_lod_data = observed_LoD_Fcod,
x_axis_species = "Cod",
name_species_rds = "cod")
# Chunk 49: key_figure_fcod_weeb
key_fig_function_LoD_web(
data_20 = Df_impacted_cod_table_20,
data_40 = Df_impacted_cod_table_40,
obs_LoD_data = observed_LoD_Fcod,
x_axis_species = "Cod",
name_species_rds = "cod")
# Chunk 50: key_figure_capelin
key_fig_function(catch_data = Df_merged_Fcapelin_catch_final,
Group_number_specific= 32,
data_20 = Df_impacted_capelin_table_20,
data_40 = Df_impacted_capelin_table_40,
obs_lod_data = observed_LoD_Fcapelin,
x_axis_species = "Capelin",
name_species_rds = "capelin")
# Chunk 51: key_figure_fcapelin_weeb
key_fig_function_LoD_web(
data_20 = Df_impacted_capelin_table_20,
data_40 = Df_impacted_capelin_table_40,
obs_LoD_data = observed_LoD_Fcapelin,
x_axis_species = "Capelin",
name_species_rds = "capelin")
# Chunk 52: biomass_relative_change_function_seal
heatmap_monospe_relative_biomass(data = Df_merged_Fseal_biomass_final,
species_name = "Harp Seal")
# Chunk 53: catch_relative_change_function_seal
heatmap_monospe_relative_catch(data = Df_merged_Fseal_catch_final,
species_name = "Harp Seal")
# Chunk 54: biomass_relative_change_function_cod
heatmap_monospe_relative_biomass(data = Df_merged_Fcod_biomass_final,
species_name = "Cod")
# Chunk 55: catch_relative_change_function_cod
heatmap_monospe_relative_catch(data = Df_merged_Fcod_catch_final,
species_name = "Cod")
# Chunk 56: biomass_relative_change_function_capelin
heatmap_monospe_relative_biomass(data = Df_merged_Fcapelin_biomass_final,
species_name = "Capelin")
# Chunk 57: catch_relative_change_function_capelin
heatmap_monospe_relative_catch(data = Df_merged_Fcapelin_catch_final,
species_name = "Capelin")
# Chunk 58: save_mono_biomass_catch
all_save_simulation()
all_save_simulation()
