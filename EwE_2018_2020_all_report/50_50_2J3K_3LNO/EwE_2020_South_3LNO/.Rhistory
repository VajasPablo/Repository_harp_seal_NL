species_name = "Cod")
# Chunk 58: catch_relative_change_function_cod
heatmap_monospe_relative_catch(data = Df_merged_Fcod_catch_final,
species_name = "Cod")
# Chunk 59: biomass_relative_change_function_capelin
heatmap_monospe_relative_biomass(data = Df_merged_Fcapelin_biomass_final,
species_name = "Capelin")
# Chunk 60: catch_relative_change_function_capelin
heatmap_monospe_relative_catch(data = Df_merged_Fcapelin_catch_final,
species_name = "Capelin")
# Chunk 61: combined_simulation_generate_SEALxCOD
combined_simulation_generate_function(
simulation_names = c(paste0("Fseal_", Df_LoD_fixed_harp_seal %>%
filter(Fixed_LoD %in% c(0, 25, 50, 75, 99)) %>%
select(F_mortality_interpolated) %>%
unlist()),
paste0("Fcod_", Df_LoD_fixed_cod %>%
filter(Fixed_LoD %in% c(0, 25, 50, 75, 99)) %>%
select(F_mortality_interpolated) %>%
unlist())),
Weight = 1,
Group_no = c(rep(5, 5),rep(12, 5)),
Type = 4,
time_step_start = 1,
nb_time_steps = 100,
fill_value_min = c(rep(F_Harp_seal_mortality, 5),rep(F_Cod_mortality, 5)),
fill_value_max = c(Df_LoD_fixed_harp_seal %>%
filter(Fixed_LoD %in% c(0, 25, 50, 75, 99)) %>%
select(F_mortality_interpolated) %>%
unlist(),
Df_LoD_fixed_cod %>%
filter(Fixed_LoD %in% c(0, 25, 50, 75, 99)) %>%
select(F_mortality_interpolated) %>%
unlist()),
output_file = here(Harp_seal_versus_cod_input, "Final_simulation", "Harp_seal_versus_cod_input_simulation.csv"),
species_1 = "seal",
species_1_number = "5",
F_species_1 = F_Harp_seal_mortality,
species_2 = "cod",
species_2_number = "12",
F_species_2 = F_Cod_mortality,
order_colonnes = c(1,2,12,3,4,5,6,7,13,8,9,10,11)
)
# Chunk 62: combined_import_generate_biomass_SEALxCOD
import_combined_transformation_output_function(input_select = "biomass",
species_short = "seal",
species_short_2 = "cod",
folder = "Harp_seal_versus_Cod",
wich_simulation = "final",
F_vector = Df_LoD_fixed_harp_seal %>%
filter(Fixed_LoD %in% c(0, 25, 50, 75, 99)) %>%
select(F_mortality_interpolated) %>%
unlist() %>%
unname(),
F_vector_2 = Df_LoD_fixed_cod %>%
filter(Fixed_LoD %in% c(0, 25, 50, 75, 99)) %>%
select(F_mortality_interpolated) %>%
unlist() %>%
unname(),
obs_F_vector = F_Harp_seal_mortality,
obs_F_vector_2 = F_Cod_mortality,
digit_import_value = 8,
digit_import_value_2 = 7,
LoD_vector_name= c("obs", "0", "25", "50", "75", "99"),
change_name_for_LoD = TRUE,
print = TRUE)
# Chunk 63: combined_import_generate_catch_SEALxCOD
import_combined_transformation_output_function(input_select = "catch",
species_short = "seal",
species_short_2 = "cod",
folder = "Harp_seal_versus_Cod",
wich_simulation = "final",
F_vector = Df_LoD_fixed_harp_seal %>%
filter(Fixed_LoD %in% c(0, 25, 50, 75, 99)) %>%
select(F_mortality_interpolated) %>%
unlist() %>%
unname(),
F_vector_2 = Df_LoD_fixed_cod %>%
filter(Fixed_LoD %in% c(0, 25, 50, 75, 99)) %>%
select(F_mortality_interpolated) %>%
unlist() %>%
unname(),
obs_F_vector = F_Harp_seal_mortality,
obs_F_vector_2 = F_Cod_mortality,
digit_import_value = 8,
digit_import_value_2 = 7,
LoD_vector_name= c("obs", "0", "25", "50", "75", "99"),
change_name_for_LoD = TRUE,
print = TRUE)
# Chunk 64: save_rds_SEALxCOD
saveRDS(Df_merged_seal_vs_cod_biomass_final, file = here("Rds_export_adapted_data", "Df_merged_seal_vs_cod_biomass_final_EwE_2020_3LNO.rds"))
# Chunk 65: summary_combined_import_generate_SEALxCOD
table_combi_function(data = Df_merged_seal_vs_cod_biomass_final,
species_col = "Cod",
species_row = "Harp Seal")
# Chunk 66: export_Df_merged_seal_vs_cod_biomass/catch_final_3LNO
saveRDS(Df_merged_seal_vs_cod_biomass_final, file = here("Rds_export_adapted_data", "seal_cod_simulation_biomass_EwE_2020_3LNO.rds"))
saveRDS(Df_merged_seal_vs_cod_catch_final, file = here("Rds_export_adapted_data", "seal_cod_simulation_catch_EwE_2020_3LNO.rds"))
# Chunk 67: heatmap_biomass_lod_sealxcod_cod
heatmap_multispecific_biomass_LoD_function(data = Df_merged_seal_vs_cod_biomass_final,
species_number = c(12, 13),
species_one_fixe = "seal",
species_two_fixe = "cod",
species_one = "seal",
species_two = "cod")
# Chunk 68: heatmap_biomass_lod_sealxcod_seal
heatmap_multispecific_biomass_LoD_function(data = Df_merged_seal_vs_cod_biomass_final,
species_number = 5,
species_one_fixe = "seal",
species_two_fixe = "cod",
species_one = "cod",
species_two = "seal")
# Chunk 69: summary_multispecific_seal_cod_20
calculate_impact_summary_multispecific(
F_data = Df_merged_seal_vs_cod_biomass_final,
species_unselect = c(12, 13, 5),
species_1 = "seal",
species_2 = "cod",
total_number_group = EwE_number_group-3,
species_short = "harp_seal_vs_cod")
# Chunk 70: summary_multispecific_seal_cod_20_dttable
DT_tables_harp_seal_vs_cod$T20
# Chunk 71: summary_multispecific_seal_cod_40_dttable
DT_tables_harp_seal_vs_cod$T40
# Chunk 72: heatmap_multispecific_group_impacted_seal_cod_20
heatmap_multispecific_group_impacted(data= Df_impacted_harp_seal_vs_cod_table_20,
species_one_fixe = "seal",
species_two_fixe = "cod",
species_one = "seal",
species_two = "cod",
percent = "20%")
# Chunk 73: heatmap_multispecific_group_impacted_seal_cod_40
heatmap_multispecific_group_impacted(data= Df_impacted_harp_seal_vs_cod_table_40,
species_one_fixe = "seal",
species_two_fixe = "cod",
species_one = "seal",
species_two = "cod",
percent = "40%")
# Chunk 74: Large_table_group_impacted_sealvcod
datatable(data = Df_impacted_harp_seal_vs_cod_large_table, filter="top",
rownames = FALSE, options = list(pageLength = 10, scrollX=T),
caption = "For Harp seal verus cod simulations: Summary large table of groups impacted change for values in the range: Equal to 0: 0; Greater than 0 and less than or equal to 20: +; Greater than 20 and less than or equal to 40: + +; Greater than 40: + + +; Greater than or equal to -20 and less than 0: -; Less than -20 and greater than or equal to -40: - -; Less than -40: - - -.")
# Chunk 75: final_summary_heatmap_sealxcod
summary_heatmap_funtion_multi(Df_impacted_harp_seal_vs_cod_large_table, "seal", "cod")
# Chunk 76: combined_simulation_generate_SEALxCAPELIN
combined_simulation_generate_function(
simulation_names = c(paste0("Fseal_", Df_LoD_fixed_harp_seal %>%
filter(Fixed_LoD %in% c(0, 25, 50, 75, 99)) %>%
select(F_mortality_interpolated) %>%
unlist()),
paste0("Fcapelin_", Df_LoD_fixed_capelin %>%
filter(Fixed_LoD %in% c(0, 25, 50, 75, 99)) %>%
select(F_mortality_interpolated) %>%
unlist())),
Weight = 1,
Group_no = c(rep(5, 5),rep(31, 5)),
Type = 4,
time_step_start = 1,
nb_time_steps = 100,
fill_value_min = c(rep(F_Harp_seal_mortality, 5),rep(F_Capelin_mortality, 5)),
fill_value_max = c(Df_LoD_fixed_harp_seal %>%
filter(Fixed_LoD %in% c(0, 25, 50, 75, 99)) %>%
select(F_mortality_interpolated) %>%
unlist(),
Df_LoD_fixed_capelin %>%
filter(Fixed_LoD %in% c(0, 25, 50, 75, 99)) %>%
select(F_mortality_interpolated) %>%
unlist()),
output_file = here(Harp_seal_versus_capelin_input, "Final_simulation", "Harp_seal_versus_capelin_input_simulation.csv"),
species_1 = "seal",
species_1_number = "5",
F_species_1 = F_Harp_seal_mortality,
species_2 = "capelin",
species_2_number = "31",
F_species_2 = F_Capelin_mortality,
order_colonnes = c(1,2,12,3,4,5,6,7,13,8,9,10,11)
)
# Chunk 77: combined_import_generate_biomass_SEALxCAPELIN
import_combined_transformation_output_function(input_select = "biomass",
species_short = "seal",
species_short_2 = "capelin",
folder = "Harp_seal_versus_Capelin",
wich_simulation = "final",
F_vector = Df_LoD_fixed_harp_seal %>%
filter(Fixed_LoD %in% c(0, 25, 50, 75, 99)) %>%
select(F_mortality_interpolated) %>%
unlist() %>%
unname(),
F_vector_2 = Df_LoD_fixed_capelin %>%
filter(Fixed_LoD %in% c(0, 25, 50, 75, 99)) %>%
select(F_mortality_interpolated) %>%
unlist() %>%
unname(),
obs_F_vector = F_Harp_seal_mortality,
obs_F_vector_2 = F_Capelin_mortality,
digit_import_value = 8,
digit_import_value_2 = 7,
LoD_vector_name= c("obs", "0", "25", "50", "75", "99"),
change_name_for_LoD = TRUE,
print = TRUE)
# Chunk 78: combined_import_generate_catch_SEALxCAPELIN
import_combined_transformation_output_function(input_select = "catch",
species_short = "seal",
species_short_2 = "capelin",
folder = "Harp_seal_versus_Capelin",
wich_simulation = "final",
F_vector = Df_LoD_fixed_harp_seal %>%
filter(Fixed_LoD %in% c(0, 25, 50, 75, 99)) %>%
select(F_mortality_interpolated) %>%
unlist() %>%
unname(),
F_vector_2 = Df_LoD_fixed_capelin %>%
filter(Fixed_LoD %in% c(0, 25, 50, 75, 99)) %>%
select(F_mortality_interpolated) %>%
unlist() %>%
unname(),
obs_F_vector = F_Harp_seal_mortality,
obs_F_vector_2 = F_Capelin_mortality,
digit_import_value = 8,
digit_import_value_2 = 7,
LoD_vector_name= c("obs", "0", "25", "50", "75", "99"),
change_name_for_LoD = TRUE,
print = TRUE)
# Chunk 79: save_rds_SEALxCAPELIN
saveRDS(Df_merged_seal_vs_capelin_biomass_final, file = here("Rds_export_adapted_data", "Df_merged_seal_vs_capelin_biomass_final_EwE_2020_3LNO.rds"))
# Chunk 80: summary_combined_import_generate_SEALxCAPELIN
table_combi_function(data = Df_merged_seal_vs_capelin_biomass_final,
species_col = "Capelin",
species_row = "Harp Seal")
# Chunk 81: export_Df_merged_seal_vs_capelin_biomass/catch_final_3LNO
saveRDS(Df_merged_seal_vs_capelin_biomass_final, file = here("Rds_export_adapted_data", "seal_capelin_simulation_biomass_EwE_2020_3LNO.rds"))
saveRDS(Df_merged_seal_vs_capelin_catch_final, file = here("Rds_export_adapted_data", "seal_capelin_simulation_catch_EwE_2020_3LNO.rds"))
# Chunk 82: heatmap_biomass_lod_sealxcapelin_capelin
heatmap_multispecific_biomass_LoD_function(data = Df_merged_seal_vs_capelin_biomass_final,
species_number = 31,
species_one_fixe = "seal",
species_two_fixe = "capelin",
species_one = "seal",
species_two = "capelin")
# Chunk 83: heatmap_biomass_lod_sealxcapelin_seal
heatmap_multispecific_biomass_LoD_function(data = Df_merged_seal_vs_capelin_biomass_final,
species_number = 5,
species_one_fixe = "seal",
species_two_fixe = "capelin",
species_one = "capelin",
species_two = "seal")
# Chunk 84: summary_multispecific_seal_capelin_20
calculate_impact_summary_multispecific(
F_data = Df_merged_seal_vs_capelin_biomass_final,
species_unselect = c(5, 31),
species_1 = "seal",
species_2 = "capelin",
total_number_group = EwE_number_group-2,
species_short = "harp_seal_vs_capelin")
# Chunk 85: summary_multispecific_seal_capelin_20_dttable
DT_tables_harp_seal_vs_capelin$T20
# Chunk 86: summary_multispecific_seal_capelin_40_dttable
DT_tables_harp_seal_vs_capelin$T40
# Chunk 87: heatmap_multispecific_group_impacted_seal_capelin_20
heatmap_multispecific_group_impacted(data= Df_impacted_harp_seal_vs_capelin_table_20,
species_one_fixe = "seal",
species_two_fixe = "capelin",
species_one = "seal",
species_two = "capelin",
percent = "20%")
# Chunk 88: heatmap_multispecific_group_impacted_seal_capelin_40
heatmap_multispecific_group_impacted(data= Df_impacted_harp_seal_vs_capelin_table_40,
species_one_fixe = "seal",
species_two_fixe = "capelin",
species_one = "seal",
species_two = "capelin",
percent = "40%")
# Chunk 89: Large_table_group_impacted_seal_capelin
datatable(data = Df_impacted_harp_seal_vs_capelin_large_table, filter="top",
rownames = FALSE, options = list(pageLength = 10, scrollX=T),
caption = "For Harp seal verus cod simulations: Summary large table of groups impacted change for values in the range: Equal to 0: 0; Greater than 0 and less than or equal to 20: +; Greater than 20 and less than or equal to 40: + +; Greater than 40: + + +; Greater than or equal to -20 and less than 0: -; Less than -20 and greater than or equal to -40: - -; Less than -40: - - -.")
# Chunk 90: final_summary_heatmap_sealxcapelin
summary_heatmap_funtion_multi(Df_impacted_harp_seal_vs_capelin_large_table, "seal", "capelin")
# Chunk 91: knit_loop_seal_cod_biomass
# Create a list to store Rmarkdown code chunks for each species
plots_species_seal_vs_cod_biomass <- list()
# Iterate over each species
for (i in seq_along(unique(Df_merged_seal_vs_cod_biomass_final$Group_name))) {
species <- unique(Df_merged_seal_vs_cod_biomass_final$Group_name)[i]
code <- paste0(
"### ", species, " {.tabset}\n\n",
"```{r heatmap_seal_cod_species_biomass_", i, ", include=TRUE} \n",
"create_heatmap_multispe_biomass(data = Df_merged_seal_vs_cod_biomass_final, SPECIE_NAME = '", species, "', species_one_fixe = 'seal', species_two_fixe = 'cod', species_one = 'seal', species_two = 'cod')\n",
"```\n\n\n"
)
plots_species_seal_vs_cod_biomass[[species]] <- unlist(code)
}
# Chunk 92: knit_loop_seal_cod_catch
Df_merged_seal_vs_cod_catch_final <- Df_merged_seal_vs_cod_catch_final %>%
mutate_at(vars(starts_with("catch")), as.numeric) %>%
filter(rowSums(select(., starts_with("catch")), na.rm = TRUE) > 0)
# Create a list to store Rmarkdown code chunks for each species
plots_species_seal_vs_cod_catch <- list()
# Iterate over each species
for (i in seq_along(unique(Df_merged_seal_vs_cod_catch_final$Group_name))) {
species <- unique(Df_merged_seal_vs_cod_catch_final$Group_name)[i]
code <- paste0(
"### ", species, " {.tabset}\n\n",
"```{r heatmap_seal_cod_species_catch_", i, ", include=TRUE} \n",
"create_heatmap_multispe_catch(data = Df_merged_seal_vs_cod_catch_final, SPECIE_NAME = '", species, "', species_one_fixe = 'seal', species_two_fixe = 'cod', species_one = 'seal', species_two = 'cod')\n",
"```\n\n\n"
)
plots_species_seal_vs_cod_catch[[species]] <- unlist(code)
}
# Chunk 93: knit_loop_seal_capelin_biomass
# Create a list to store Rmarkdown code chunks for each species
plots_species_seal_vs_capelin_biomass <- list()
# Iterate over each species
for (i in seq_along(unique(Df_merged_seal_vs_capelin_biomass_final$Group_name))) {
species <- unique(Df_merged_seal_vs_capelin_biomass_final$Group_name)[i]
code <- paste0(
"### ", species, " {.tabset}\n\n",
"```{r heatmap_seal_capelin_species_biomass_", i, ", include=TRUE} \n",
"create_heatmap_multispe_biomass(data = Df_merged_seal_vs_capelin_biomass_final, SPECIE_NAME = '", species, "', species_one_fixe = 'seal', species_two_fixe = 'capelin', species_one = 'seal', species_two = 'capelin')\n",
"```\n\n\n"
)
plots_species_seal_vs_capelin_biomass[[species]] <- unlist(code)
}
# Chunk 94: knit_loop_seal_capelin_catch
Df_merged_seal_vs_capelin_catch_final <- Df_merged_seal_vs_capelin_catch_final %>%
mutate_at(vars(starts_with("catch")), as.numeric) %>%
filter(rowSums(select(., starts_with("catch")), na.rm = TRUE) > 0)
# Create a list to store Rmarkdown code chunks for each species
plots_species_seal_vs_capelin_catch <- list()
# Iterate over each species
for (i in seq_along(unique(Df_merged_seal_vs_capelin_catch_final$Group_name))) {
species <- unique(Df_merged_seal_vs_capelin_catch_final$Group_name)[i]
code <- paste0(
"### ", species, " {.tabset}\n\n",
"```{r heatmap_seal_capelin_species_catch_", i, ", include=TRUE} \n",
"create_heatmap_multispe_catch(data = Df_merged_seal_vs_capelin_catch_final, SPECIE_NAME = '", species, "', species_one_fixe = 'seal', species_two_fixe = 'capelin', species_one = 'seal', species_two = 'capelin')\n",
"```\n\n\n"
)
plots_species_seal_vs_capelin_catch[[species]] <- unlist(code)
}
# Chunk 95: generate_B_exploratory_simulation_seal
simulation_generate_function(
simulation_names = paste0("Bcod_", c(3.576*(c(1, 10) / 100), 0.568, 3.576*(c(20, 30, 40, 50, 60, 70, 80, 90, 100) / 100))),
Weight = 1,
Group_no = 12,
Type = -1,
time_step_start = 1,
nb_time_steps = 100,
fill_value_min = 0.568,
fill_value_max =  c(3.576*(c(1, 10) / 100), 0.568, 3.576*(c(20, 30, 40, 50, 60, 70, 80, 90, 100) / 100)),
output_file = here(Cod_input, "Final_simulation", "Cod_biomass_input_Final_simulation.csv"))
# Chunk 96: harp_seal_B_first_simulation_quick_description_seal
datatable(data = data.frame("Biomass value simulation" = paste0("Bcod_", c(3.576*(c(1, 10) / 100), 0.568, 3.576*(c(20, 30, 40, 50, 60, 70, 80, 90, 100) / 100)))), filter="top",
rownames = FALSE, options = list(pageLength = 5, scrollX=T))
# Chunk 97: generate_B_exploratory_simulation_cod
simulation_generate_function(
simulation_names = paste0("Bcapelin_", c(13.77*(c(1, 10, 20)/ 100), 3.50, 13.77*(c(30, 40, 50, 60, 70)/ 100), 13.77*(c(80, 90, 100)/ 100))),
Weight = 1,
Group_no = 31,
Type = -1,
time_step_start = 1,
nb_time_steps = 100,
fill_value_min = 3.50,
fill_value_max = c(13.77*(c(1, 10, 20)/ 100), 3.50, 13.77*c(30, 40, 50, 60, 70, 80, 90, 100)/ 100),
output_file = here(Capelin_input, "Final_simulation", "Capelin_biomass_input_Final_simulation.csv"))
# Chunk 98: harp_seal_B_first_simulation_quick_description_cod
datatable(data = data.frame("Biomass value simulation" =  paste0("Bcapelin_", c(13.77*(c(1, 10, 20)/ 100), 3.50, 13.77*(c(30, 40, 50, 60, 70)/ 100), 13.77*(c(80, 90, 100)/ 100)))), filter="top",
rownames = FALSE, options = list(pageLength = 5, scrollX=T))
# Chunk 99: import_final_simulation_Bcod
import_transformation_output_function(input_select = "biomass",
species_short = "Bcod",
species_long = "Cod",
wich_simulation = "final",
F_vector = c(3.576*(c(1, 10) / 100), 0.568, 3.576*(c(20, 30, 40, 50, 60, 70, 80, 90, 100) / 100)),
digit_import_value = 5,
print = TRUE)
# Chunk 100: create_group_43_for_merged_cod_life_stage_final_bsim
Df_merged_Bcod_biomass_final  <- Df_merged_Bcod_biomass_final %>%
mutate(across(starts_with("biomass"), as.numeric)) %>%
filter(Group_number %in% c(12, 13)) %>%
mutate(
across(starts_with("biomass"), ~ sum(.)),
Group_number = 46,
Group_name = "Cod"
) %>%
slice(1) %>%
rbind.data.frame(Df_merged_Bcod_biomass_final) %>%
arrange(Group_number)
# Chunk 101: import_final_simulation_catch_Bcod
import_transformation_output_function(input_select = "catch",
species_short = "Bcod",
species_long = "Cod",
wich_simulation = "final",
F_vector =  c(3.576*(c(1, 10) / 100), 0.568, 3.576*(c(20, 30, 40, 50, 60, 70, 80, 90, 100) / 100)),
digit_import_value = 5,
print = TRUE)
# Chunk 102: groups_impacted_calculation_cod_biomass
calculate_impact_summary_LoR(LoR_rename = c(1, 10, "obs", 20, 30, 40, 50, 60, 70, 80, 90, 100),
b_data = Df_merged_Bcod_biomass_final,
species_unselect = c(12, 13, 46),
LoR_obs_position = "LoR_20",
species = "Cod",
total_number_group = EwE_number_group-3,
species_short = "bcod")
# Chunk 103: groups_impacted_calculation_cod_t20_biomass
DT_tables_bcod$T20
# Chunk 104: groups_impacted_calculation_cod_t40_biomass
DT_tables_bcod$T40
# Chunk 105: export_Df_merged_Bcod_biomass/catch_final_3LNO
saveRDS(Df_merged_Bcod_biomass_final, file = here("Rds_export_adapted_data", "Bcod_simulation_biomass_EwE_2020_3LNO.rds"))
saveRDS(Df_merged_Bcod_catch_final, file = here("Rds_export_adapted_data", "Bcod_simulation_catch_EwE_2020_3LNO.rds"))
# Chunk 106: import_final_simulation_Bcapelin
import_transformation_output_function(input_select = "biomass",
species_short = "Bcapelin",
species_long = "Capelin",
wich_simulation = "final",
F_vector = c(13.77*(c(1, 10, 20)/ 100), 3.50, 13.77*c(30, 40, 50, 60, 70, 80, 90, 100)/ 100),
digit_import_value = 4,
print = TRUE)
# Chunk 107: import_final_simulation_catch_Bcapelin
import_transformation_output_function(input_select = "catch",
species_short = "Bcapelin",
species_long = "Capelin",
wich_simulation = "final",
F_vector =  c(13.77*(c(1, 10, 20)/ 100), 3.50, 13.77*c(30, 40, 50, 60, 70, 80, 90, 100)/ 100),
digit_import_value = 4,
print = TRUE)
# Chunk 108: groups_impacted_calculation_capelin_biomass
calculate_impact_summary_LoR(LoR_rename = c(1, 10, 20, "obs", 30, 40, 50, 60, 70, 80, 90, 100),
b_data = Df_merged_Bcapelin_biomass_final,
species_unselect = 31,
LoR_obs_position = "LoR_30",
species = "Capelin",
total_number_group = EwE_number_group-1,
species_short = "bcapelin")
# Chunk 109: groups_impacted_calculation_capelin_t20_biomass
DT_tables_bcapelin$T20
# Chunk 110: groups_impacted_calculation_capelin_t40_biomass
DT_tables_bcapelin$T40
# Chunk 111: export_Df_merged_Bcapelin_biomass/catch_final_3LNO
saveRDS(Df_merged_Bcapelin_biomass_final, file = here("Rds_export_adapted_data", "Bcapelin_simulation_biomass_EwE_2020_3LNO.rds"))
saveRDS(Df_merged_Bcapelin_catch_final, file = here("Rds_export_adapted_data", "Bcapelin_simulation_catch_EwE_2020_3LNO.rds"))
# Chunk 112: Large_table_group_impacted_bcod
datatable(data = Df_impacted_bcod_large_table, filter="top",
rownames = FALSE, options = list(pageLength = 10, scrollX=T),
caption = "For Harp Seal: Summary large table of groups impacted change for values in the range: Equal to 0: 0; Greater than 0 and less than or equal to 20: +; Greater than 20 and less than or equal to 40: + +; Greater than 40: + + +; Greater than or equal to -20 and less than 0: -; Less than -20 and greater than or equal to -40: - -; Less than -40: - - -.")
# Chunk 113: Large_table_group_impacted_bcapelin
datatable(data = Df_impacted_bcapelin_large_table, filter="top",
rownames = FALSE, options = list(pageLength = 10, scrollX=T),
caption = "For Cod: Summary large table of groups impacted change for values in the range: Equal to 0: 0; Greater than 0 and less than or equal to 20: +; Greater than 20 and less than or equal to 40: + +; Greater than 40: + + +; Greater than or equal to -20 and less than 0: -; Less than -20 and greater than or equal to -40: - -; Less than -40: - - -.")
# Chunk 114: final_summary_heatmap_cod_capelin_biomass
summary_heatmap_funtion_LoR(data_sp_cod = Df_impacted_bcod_large_table,
sp_cod_1 = "Cod> 35 cm",
sp_cod_2 = "Cod<= 35 cm",
nb_row_spcod_1 = 11,
nb_row_spcod_2 = 12,
data_sp_capelin = Df_impacted_bcapelin_large_table,
sp_capelin = "Capelin",
nb_row_spcapelin_1 = 30,
nb_row_spcapelin_2 = 31)
# Chunk 115: key_figure_bcod
key_fig_function_LoR(LoR_order = c(1, 10, "obs", 20, 30, 40, 50, 60, 70, 80, 90, 100),
catch_data = Df_merged_Bcod_catch_final,
Group_number_specific= 12,
data_20 = Df_impacted_bcod_table_20,
data_40 = Df_impacted_bcod_table_40,
obs_LoR_data = 3,
x_axis_species = "Cod",
name_species_rds = "cod")
# Chunk 116: key_figure_bcod_weeb
key_fig_function_LoR_web(LoR_order = c(1, 10, "obs", 20, 30, 40, 50, 60, 70, 80, 90, 100),
data_20 = Df_impacted_bcod_table_20,
data_40 = Df_impacted_bcod_table_40,
obs_LoR_data = 3,
x_axis_species = "Cod",
name_species_rds = "cod")
# Chunk 117: key_figure_bcapelin
key_fig_function_LoR(LoR_order = c(1, 10, 20, "obs", 30, 40, 50, 60, 70, 80, 90, 100),
catch_data = Df_merged_Bcapelin_catch_final,
Group_number_specific= 31,
data_20 = Df_impacted_bcapelin_table_20,
data_40 = Df_impacted_bcapelin_table_40,
obs_LoR_data = 4,
x_axis_species = "Capelin",
name_species_rds = "capelin")
# Chunk 118: key_figure_bcapelin_weeb
key_fig_function_LoR_web(LoR_order = c(1, 10, 20, "obs", 30, 40, 50, 60, 70, 80, 90, 100),
data_20 = Df_impacted_bcapelin_table_20,
data_40 = Df_impacted_bcapelin_table_40,
obs_LoR_data = 4,
x_axis_species = "Capelin",
name_species_rds = "capelin")
# Chunk 119: biomass_relative_change_function_cod_biomass
heatmap_monospe_relative_biomass_LoR(data = Df_merged_Bcod_biomass_final,
LoR_order = c(1, 10, "obs", 20, 30, 40, 50, 60, 70, 80, 90, 100),
species_name = "Cod")
# Chunk 120: catch_relative_change_function_cod_biomass
heatmap_monospe_relative_catch_LoR(data = Df_merged_Bcod_catch_final,
LoR_order = c(1, 10, "obs", 20, 30, 40, 50, 60, 70, 80, 90, 100),
species_name = "Cod")
Cod_trends_LoR_capelin_function(data = Df_merged_Bcapelin_biomass_final,
LoR_order = c(1, 10, 20, "obs", 30, 40, 50, 60, 70, 80, 90, 100),
species_name = "Capelin",
species_select = c("Cod> 35 cm", "Cod<= 35 cm"),
area = "EwE 2020 3LNO - 50%:",
save_name = "Bcapelin_LoR_Cod_biomass_2J3K_50.rds")
Cod_trends_LoR_capelin_function(data = Df_merged_Bcapelin_biomass_final,
LoR_order = c(1, 10, 20, "obs", 30, 40, 50, 60, 70, 80, 90, 100),
species_name = "Capelin",
species_select = c("Cod> 35 cm", "Cod<= 35 cm"),
area = "EwE 2020 3LNO - 50%:",
save_name = "Bcapelin_LoR_Cod_biomass_3LNO_50.rds")
