

# Fonction améliorée avec un gradient discret
plot_simulation_comparison <- function(data, sim_type, cut, title, group_name_key, sp_remove, legend_labels) {
  
  group_name_key <- group_name_key %>% 
    filter(! Group_name %in% sp_remove)
  
  # Définir 11 couleurs en extrayant des couleurs d'un gradient
  color_palette <- colorRampPalette(c("blue", "purple", "red"))(cut)  # Dégradé de bleu à rouge
  
  # Transformation des données au format long
  data_long <- data %>%
    pivot_longer(cols = starts_with("Sim_"), 
                 names_to = "Simulation", 
                 values_to = "Relative_Change") %>%
    
    # Transformer "Sim_1" à "Sim_11" en facteur pour assurer l'ordre
    mutate(Simulation = factor(Simulation, levels = paste0("Sim_", 1:cut))) %>%
    
    # Transformation en relative change (1 = référence)
    mutate(Relative_Change = 1 + (Relative_Change / 100)) %>%
    
    filter(! Group_name %in% sp_remove) %>%
    
    # Ordonner les espèces selon `group_name_key`
    left_join(select(group_name_key, Group_name), by = c("Group_name" = "Group_name")) %>%
    mutate(Group_name = factor(Group_name, levels = rev(group_name_key$Group_name)))  # Inversion de l'ordre
  
  # Tracé ggplot avec un gradient discret
  ggplot(data_long, aes(x = Relative_Change, y = Group_name, 
                        group = Group_name, color = Simulation)) +
    geom_line(color = "gray60", size = 1, alpha = 0.5) +  # Lignes neutres reliant les points
    geom_point(size = 3) +  # Points colorés selon le gradient discret
    geom_vline(xintercept = 1, linetype = "dashed", color = "black") +  # Ligne de référence à 1
    #scale_x_continuous(limits = c(0.8, 1.2)) +  # Ajustement des limites
    scale_color_manual(
      values = color_palette,
      labels = legend_labels,
      name   = paste0(sim_type, " Simulation")) + 
    theme_minimal(base_size = 14) +  
    labs(title = title,
         x = "Relative Biomass Change (V2 simulation scaled at 1)",
         y = "Functional Groups",
         color = paste0(sim_type, " Simulation")) + 
    theme(
      legend.position = "right",  # Légende à droite
      legend.title = element_text(size = 14, face = "bold"),
      legend.text = element_text(size = 12),
      axis.title.x = element_text(size = 14, face = "bold"),
      axis.title.y = element_text(size = 14, face = "bold"),
      axis.text = element_text(size = 12),
      plot.title = element_text(size = 16, face = "bold", hjust = 0.5)
    )
}